services:
  ##################### POSTGRES PGADMIN############################
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE: ${DATABASE}
    ports:
      - "${HOST_POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - ./backend/docker_init/postgres_init:/docker-entrypoint-initdb.d
      - ./backend/docker_volume/postgres_data:/var/lib/postgresql/data
    logging:
      driver: none
    networks:
      - netexchange

  perfect_server:
    build:
      context: ./backend/perfect_server
      dockerfile: Dockerfile
    environment:
      PREFECT_API_DATABASE_CONNECTION_URL: "postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/prefect"
      PREFECT_SERVER_API_HOST: "0.0.0.0"
      PREFECT_API_URL: "http://0.0.0.0:${PERFECT_PORT}/api"
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: "5432"
    volumes:
      - ./backend/perfect_server:/app
    ports:
      - "${PERFECT_PORT}:${PERFECT_PORT}"
    depends_on:
      - postgres
    networks:
      - netexchange
    # logging:
    #   driver: none

  fast_api:
    build:
      context: ./backend/fastapi
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      DATABASE: ${DATABASE}
    ports:
      - "${HOST_FAST_API_PORT}:${FAST_API_PORT}"
    volumes:
      - ./backend/fastapi:/app
    # logging:
    #   driver: none
    depends_on:
      - postgres
    networks:
      - netexchange
  scheduler:
    build:
      context: ./backend/scheduler
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      DATABASE: ${DATABASE}
      PREFECT_API_URL: "http://perfect_server:4200/api"
      PREFECT_HOST: "perfect_server"
      PREFECT_PORT: ${PERFECT_PORT}
    volumes:
      - ./backend/scheduler:/app
    # logging:
    #   driver: none
    depends_on:
      - perfect_server
      - postgres
    networks:
      - netexchange

  nginx:
    container_name: nginxTest
    build:
      context: .
      dockerfile: nginx/Dockerfile

    ports:
      - "80:80"
    depends_on:
      - fast_api
      - postgres

    networks:
      - netexchange
    volumes:
      - ./frontend:/client

networks:
  netexchange:
    driver: bridge
